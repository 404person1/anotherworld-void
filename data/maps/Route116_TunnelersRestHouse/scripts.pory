
const LOCALID_GIGI = 1
const LOCALID_INA = 2
const LOCALID_BAELZ = 3
const LOCALID_NUE = 3

const MULTI_BUY_ITEMS = 0
const MULTI_BP_MOVES = 1
const MULTI_SELL_ITEMS = 2
const MULTI_NEVERMIND = 3

const MULTI_GREEN_UFO = 0
const MULTI_RED_UFO = 1
const MULTI_BLUE_UFO = 2
const MULTI_EXCHANGE_UFO = 3
const MULTI_UFO_CANCEL = 4

const GREEN_IV_WORSE = 0
const GREEN_PEARL = 1
const GREEN_TOHO_ORBS = 2
const GREEN_CANCEL = 2

const RED_EVO_HEART = 0
const RED_ABILITY_CAPSULE = 1
const RED_NATURE_MINT = 2
const RED_IV_PERFECT = 3
const RED_BIG_PEARL = 4
const RED_GREAT_ORBS = 5
const RED_CANCEL = 6

const BLUE_TUTOR = 0
const BLUE_ABILITY_PATCH = 1
const BLUE_ALL_IV_PERFECT = 2
const BLUE_PEARL_STRING = 3
const BLUE_ULTRA_ORBS = 4
const BLUE_CANCEL = 5

const TUTOR_ALL_LEVEL = 0
const TUTOR_EGG_MOVE = 1
const TUTOR_CANCEL = 2

script Route116_TunnelersRestHouse_EventScript_BaelzFunEvent {
	lock
	call(Route116_TunnelersRestHouse_EventScript_MovePlayerInFront)
	applymovement(LOCALID_BAELZ, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Baelz)
	msgbox(Route116_TunnelersRestHouse_Text_BaelzInvested)
	closemessage
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Gigi)
	msgbox(Route116_TunnelersRestHouse_Text_GigiBoughtIn)
	closemessage
	applymovement(LOCALID_BAELZ, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Baelz)
	msgbox(Route116_TunnelersRestHouse_Text_BaelzWhat)
	closemessage
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Gigi)
	msgbox(Route116_TunnelersRestHouse_Text_GigiDefense)
	closemessage
	applymovement(LOCALID_BAELZ, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Baelz)
	msgbox(Route116_TunnelersRestHouse_Text_BaelzHuh)
	closemessage
	release
	end
}

script Route116_TunnelersRestHouse_EventScript_GigiFunEvent {
	lock
	call(Route116_TunnelersRestHouse_EventScript_MovePlayerInFront)
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Gigi)
	msgbox(Route116_TunnelersRestHouse_Text_GigiMurinIntro, MSGBOX_DEFAULT)
	closemessage
	applymovement(LOCALID_BAELZ, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Baelz)
	msgbox(Route116_TunnelersRestHouse_Text_HakosBaelzIntro, MSGBOX_DEFAULT)
	closemessage
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Gigi)
	msgbox(Route116_TunnelersRestHouse_Text_GigiOutOfBudget, MSGBOX_DEFAULT)
	closemessage
	setspeakername(Route116_TunnelersRestHouse_Text_Player)
	msgbox(Route116_TunnelersRestHouse_Text_RenkoFrickinTalking, MSGBOX_DEFAULT)
	closemessage
	release
	end
}

script Route116_TunnelersRestHouse_EventScript_NueBogosBinted {
	lock
	call(Route116_TunnelersRestHouse_EventScript_MovePlayerInFront)
	applymovement(LOCALID_NUE, Common_Movement_WalkInPlaceLeft)
	waitmovement(0)
	playmoncry(SPECIES_CHIBI_NUE, CRY_MODE_NORMAL)
	msgbox(Route116_TunnelersRestHouse_Text_NueBogosBinted, MSGBOX_DEFAULT)
	waitmoncry
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceRight)
	waitmovement(0)
	setspeakername(gText_Gigi)
	playtrainervoice(TRAINER_VOICE_GIGI, 1)
	msgbox(Route116_TunnelersRestHouse_Text_GigiMurinBogosBinted, MSGBOX_DEFAULT)
	waitmoncry
	closemessage
	applymovement(LOCALID_NUE, Common_Movement_WalkInPlaceLeft)
	waitmovement(0)
	playmoncry(SPECIES_CHIBI_NUE, CRY_MODE_NORMAL)
	msgbox(Route116_TunnelersRestHouse_Text_NueBogosBinted, MSGBOX_DEFAULT)
	waitmoncry
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceRight)
	waitmovement(0)
	setspeakername(gText_Gigi)
	playtrainervoice(TRAINER_VOICE_GIGI, 1)
	msgbox(Route116_TunnelersRestHouse_Text_GigiMurinBogosBinted, MSGBOX_DEFAULT)
	waitmoncry
	closemessage
	applymovement(LOCALID_NUE, Common_Movement_WalkInPlaceLeft)
	waitmovement(0)
	playmoncry(SPECIES_CHIBI_NUE, CRY_MODE_NORMAL)
	msgbox(Route116_TunnelersRestHouse_Text_NueBogosBinted, MSGBOX_DEFAULT)
	waitmoncry
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceRight)
	waitmovement(0)
	setspeakername(gText_Gigi)
	playtrainervoice(TRAINER_VOICE_GIGI, 0)
	msgbox(Route116_TunnelersRestHouse_Text_GigiMurinLaugh, MSGBOX_DEFAULT)
	waitmoncry
	closemessage
	release
	end
}

script Route116_TunnelersRestHouse_EventScript_InaFunEvent {
	lock
	call(Route116_TunnelersRestHouse_EventScript_MovePlayerInFront)
	applymovement(LOCALID_INA, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Ina)
    msgbox(Route116_TunnelersRestHouse_Text_InaWah)
	closemessage
	applymovement(LOCALID_BAELZ, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Baelz)
	msgbox(Route116_TunnelersRestHouse_Text_BaelzNoMugshots)
	closemessage
	applymovement(LOCALID_INA, Common_Movement_WalkInPlaceRight)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Ina)
	msgbox(Route116_TunnelersRestHouse_Text_InaAdmit)
	closemessage
	applymovement(LOCALID_BAELZ, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Baelz)
	msgbox(Route116_TunnelersRestHouse_Text_BaelzCheerUp)
	closemessage
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Gigi)
	msgbox(Route116_TunnelersRestHouse_Text_GigiCookie)
	closemessage
	applymovement(LOCALID_INA, Common_Movement_WalkInPlaceRight)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Ina)
	msgbox(Route116_TunnelersRestHouse_Text_InaThankYou)
	closemessage
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Gigi)
	msgbox(Route116_TunnelersRestHouse_Text_GigiLavaridge)
	closemessage
	release
	end
}

script Route116_TunnelersRestHouse_EventScript_MovePlayerInFront {
	specialvar(VAR_RESULT, GetPlayerFacingDirection)
	switch(var(VAR_RESULT)){
		case DIR_WEST:
			applymovement(OBJ_EVENT_ID_PLAYER, Route116_TunnelersRestHouse_Movement_PlayerMoveLeftToFront)
			waitmovement(0)
		case DIR_EAST:
			applymovement(OBJ_EVENT_ID_PLAYER, Route116_TunnelersRestHouse_Movement_PlayerMoveRightToFront)
			waitmovement(0)
		case DIR_SOUTH:
			applymovement(OBJ_EVENT_ID_PLAYER, Route116_TunnelersRestHouse_Movement_PlayerMoveTheWayToFront)
			waitmovement(0)
	}
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTrader {
	lock
	faceplayer
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
    msgbox(Route116_TunnelersRestHouse_Text_UFOTraderIntro)
	if (checkitem(ITEM_GREEN_UFO) == FALSE && checkitem(ITEM_RED_UFO) == FALSE && checkitem(ITEM_BLUE_UFO) == FALSE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNoUFOs)
	}
    message(Route116_TunnelersRestHouse_Text_UFOTraderHaveUFOs)
    waitmessage
    while {
        call(Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoice)
        if (var(VAR_RESULT) > MULTI_EXCHANGE_UFO) {
            break
        }
        switch (var(VAR_RESULT)) {
            case MULTI_GREEN_UFO:
                call(Route116_TunnelersRestHouse_EventScript_UFOTraderGreenUFO)
            case MULTI_RED_UFO:
                call(Route116_TunnelersRestHouse_EventScript_UFOTraderRedUFO)
            case MULTI_BLUE_UFO:
                call(Route116_TunnelersRestHouse_EventScript_UFOTraderBlueUFO)
            case MULTI_EXCHANGE_UFO:
                call(Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeUFO)
        }
		if (checkitem(ITEM_GREEN_UFO) == FALSE && checkitem(ITEM_RED_UFO) == FALSE && checkitem(ITEM_BLUE_UFO) == FALSE) {
			break
		}
        message(Route116_TunnelersRestHouse_Text_UFOTraderHaveUFOs)
        waitmessage
    }
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderOutro)
	release
	end
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderNoUFOs {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderNoUFOs)
	release
	end
}

script Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoice {
	if (checkitem(ITEM_GREEN_UFO) == TRUE) {
    	dynmultipush(Route116_TunnelersRestHouse_Text_GreenUFO, MULTI_GREEN_UFO)
	}
	if (checkitem(ITEM_RED_UFO) == TRUE) {
    	dynmultipush(Route116_TunnelersRestHouse_Text_RedUFO, MULTI_RED_UFO)
	}
	if (checkitem(ITEM_BLUE_UFO) == TRUE) {
    	dynmultipush(Route116_TunnelersRestHouse_Text_BlueUFO, MULTI_BLUE_UFO)
	}
	if (checkitem(ITEM_GREEN_UFO, 2) == TRUE || checkitem(ITEM_RED_UFO) == TRUE || checkitem(ITEM_BLUE_UFO) == TRUE) {
		dynmultipush(Route116_TunnelersRestHouse_Text_ExchangeUFOs, MULTI_EXCHANGE_UFO)
	}
    dynmultipush(Route116_TunnelersRestHouse_Text_Nevermind, MULTI_UFO_CANCEL)
    dynmultistack(0, 0, FALSE, 5, FALSE, MULTI_GREEN_UFO, NULL)
    return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderGreenUFO {
	message(Route116_TunnelersRestHouse_Text_UFOTraderGreenUFO)
	waitmessage
	call(Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceGreen)
    if (var(VAR_RESULT) > GREEN_TOHO_ORBS) {
        return
    }
	bufferitemname(STR_VAR_2, ITEM_GREEN_UFO)
	switch (var(VAR_RESULT)) {
		case GREEN_IV_WORSE:
			goto(Route116_TunnelersRestHouse_EventScript_UFOTraderWorsenIV)
		case GREEN_PEARL:
			bufferitemname(STR_VAR_1, ITEM_PEARL)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			checkitemspace(ITEM_PEARL)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
			}
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
			hidespeakername
			giveitem(ITEM_PEARL)
		case GREEN_TOHO_ORBS:
			bufferitemnameplural(STR_VAR_1, ITEM_TOHO_ORB, 5)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			checkitemspace(ITEM_TOHO_ORB, 5)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
			}
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
			hidespeakername
			giveitem(ITEM_TOHO_ORB, 5)
	}
	removeitem(ITEM_GREEN_UFO)
	bufferitemname(STR_VAR_1, ITEM_GREEN_UFO)
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
	msgbox(Route116_TunnelersRestHouse_Text_TakeUfo)
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderNotEnoughSpace)
	return
}

script Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceGreen {
    dynmultipush(Route116_TunnelersRestHouse_Text_Worsen1IV, GREEN_IV_WORSE)
    dynmultipush(Route116_TunnelersRestHouse_Text_Pearl, GREEN_PEARL)
    dynmultipush(Route116_TunnelersRestHouse_Text_TohoOrbs, GREEN_TOHO_ORBS)
    dynmultipush(Route116_TunnelersRestHouse_Text_Nevermind, GREEN_CANCEL)
    dynmultistack(0, 0, FALSE, 5, FALSE, GREEN_IV_WORSE, NULL)
    return
}

script Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceStat {
    dynmultipush(gText_HP3, STAT_HP)
    dynmultipush(gText_Attack3, STAT_ATK)
    dynmultipush(gText_Defense3, STAT_DEF)
    dynmultipush(gText_Speed2, STAT_SPEED)
    dynmultipush(gText_SpAtk3, STAT_SPATK)
    dynmultipush(gText_SpDef3, STAT_SPDEF)
    dynmultipush(Route116_TunnelersRestHouse_Text_Nevermind, NUM_STATS)
    dynmultistack(0, 0, FALSE, 5, FALSE, STAT_HP, NULL)
    return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderWorsenIV {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSeePuppet)
	special(ChoosePartyMon)
	waitstate
	if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) {
		return
	}
	special(IsSelectedMonEgg)
	if (var(VAR_RESULT) == TRUE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderShowEgg)
	}
	message(Route116_TunnelersRestHouse_Text_UFOTraderWhichStatShouldModify)
	waitmessage
    call(Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceStat)
    if (var(VAR_RESULT) > STAT_SPDEF) {
        return
    }
	switch (var(VAR_RESULT)) {
		case STAT_HP:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderHPWorse, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canunhypertrain(STAT_HP, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			unhypertrain(STAT_HP, VAR_0x8004)
		case STAT_ATK:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderAttackWorse, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canunhypertrain(STAT_ATK, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			unhypertrain(STAT_ATK, VAR_0x8004)
		case STAT_DEF:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderDefenseWorse, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canunhypertrain(STAT_DEF, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			unhypertrain(STAT_DEF, VAR_0x8004)
		case STAT_SPEED:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSpeedWorse, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canunhypertrain(STAT_SPEED, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			unhypertrain(STAT_SPEED, VAR_0x8004)
		case STAT_SPATK:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSpAttackWorse, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canunhypertrain(STAT_SPATK, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			unhypertrain(STAT_SPATK, VAR_0x8004)
		case STAT_SPDEF:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSpDefenseWorse, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canunhypertrain(STAT_SPDEF, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			unhypertrain(STAT_SPDEF, VAR_0x8004)
    }
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderWorsenSpecificStat)
	removeitem(ITEM_GREEN_UFO)
	bufferitemname(STR_VAR_1, ITEM_GREEN_UFO)
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
	msgbox(Route116_TunnelersRestHouse_Text_TakeUfo)
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderAlreadyIdealStat)
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderRedUFO {
	message(Route116_TunnelersRestHouse_Text_UFOTraderRedUFO)
	waitmessage
	call(Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceRed)
    if (var(VAR_RESULT) > RED_GREAT_ORBS) {
        return
    }
	bufferitemname(STR_VAR_2, ITEM_RED_UFO)
	switch (var(VAR_RESULT)) {
		case RED_EVO_HEART:
		case RED_ABILITY_CAPSULE:
			bufferitemname(STR_VAR_1, ITEM_ABILITY_CAPSULE)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			checkitemspace(ITEM_ABILITY_CAPSULE)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
			}
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
			hidespeakername
			giveitem(ITEM_ABILITY_CAPSULE)
		case RED_NATURE_MINT:
		case RED_IV_PERFECT:
			goto(Route116_TunnelersRestHouse_EventScript_UFOTraderPerfect1IV)
		case RED_BIG_PEARL:
			bufferitemname(STR_VAR_1, ITEM_BIG_PEARL)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			checkitemspace(ITEM_BIG_PEARL)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
			}
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
			hidespeakername
			giveitem(ITEM_BIG_PEARL)
		case RED_GREAT_ORBS:
			bufferitemnameplural(STR_VAR_1, ITEM_GREAT_ORB, 5)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			checkitemspace(ITEM_GREAT_ORB, 5)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
			}
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
			hidespeakername
			giveitem(ITEM_GREAT_ORB, 5)
	}
	removeitem(ITEM_RED_UFO)
	bufferitemname(STR_VAR_1, ITEM_RED_UFO)
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
	msgbox(Route116_TunnelersRestHouse_Text_TakeUfo)
	return
}

script Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceRed {
    dynmultipush(Route116_TunnelersRestHouse_Text_EvoHeart, RED_EVO_HEART)
    dynmultipush(Route116_TunnelersRestHouse_Text_AbilityCapsule, RED_ABILITY_CAPSULE)
    dynmultipush(Route116_TunnelersRestHouse_Text_NatureMint, RED_NATURE_MINT)
    dynmultipush(Route116_TunnelersRestHouse_Text_Perfect1IV, RED_IV_PERFECT)
    dynmultipush(Route116_TunnelersRestHouse_Text_BigPearl, RED_BIG_PEARL)
    dynmultipush(Route116_TunnelersRestHouse_Text_GreatOrbs, RED_GREAT_ORBS)
    dynmultipush(Route116_TunnelersRestHouse_Text_Nevermind, RED_CANCEL)
    dynmultistack(0, 0, FALSE, 5, FALSE, RED_EVO_HEART, NULL)
    return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderPerfect1IV {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSeePuppet)
	special(ChoosePartyMon)
	waitstate
	if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) {
		return
	}
	special(IsSelectedMonEgg)
	if (var(VAR_RESULT) == TRUE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderShowEgg)
	}
	message(Route116_TunnelersRestHouse_Text_UFOTraderWhichStatShouldModify)
	waitmessage
    call(Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceStat)
    if (var(VAR_RESULT) > STAT_SPDEF) {
        return
    }
	switch (var(VAR_RESULT)) {
		case STAT_HP:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderHPPerfect, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canhypertrain(STAT_HP, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			hypertrain(STAT_HP, VAR_0x8004)
		case STAT_ATK:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderAttackPerfect, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canhypertrain(STAT_ATK, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			hypertrain(STAT_ATK, VAR_0x8004)
		case STAT_DEF:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderDefensePerfect, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canhypertrain(STAT_DEF, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			hypertrain(STAT_DEF, VAR_0x8004)
		case STAT_SPEED:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSpeedPerfect, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canhypertrain(STAT_SPEED, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			hypertrain(STAT_SPEED, VAR_0x8004)
		case STAT_SPATK:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSpAttackPerfect, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canhypertrain(STAT_SPATK, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			hypertrain(STAT_SPATK, VAR_0x8004)
		case STAT_SPDEF:
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSpDefensePerfect, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			canhypertrain(STAT_SPDEF, VAR_0x8004)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderAlreadyIdealStat)
			}
			hypertrain(STAT_SPDEF, VAR_0x8004)
    }
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderPerfectSpecificStat)
	removeitem(ITEM_RED_UFO)
	bufferitemname(STR_VAR_1, ITEM_RED_UFO)
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
	msgbox(Route116_TunnelersRestHouse_Text_TakeUfo)
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderBlueUFO {
	message(Route116_TunnelersRestHouse_Text_UFOTraderBlueUFO)
	waitmessage
	call(Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceBlue)
    if (var(VAR_RESULT) > BLUE_ULTRA_ORBS) {
        return
    }
	bufferitemname(STR_VAR_2, ITEM_BLUE_UFO)
	switch (var(VAR_RESULT)) {
		case BLUE_TUTOR:
			goto(Route116_TunnelersRestHouse_EventScript_UFOTraderTutor)
		case BLUE_ABILITY_PATCH:
			bufferitemname(STR_VAR_1, ITEM_ABILITY_PATCH)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			checkitemspace(ITEM_ABILITY_PATCH)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
			}
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
			hidespeakername
			giveitem(ITEM_ABILITY_PATCH)
		case BLUE_ALL_IV_PERFECT:
		case BLUE_PEARL_STRING:
			bufferitemname(STR_VAR_1, ITEM_PEARL_STRING)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			checkitemspace(ITEM_PEARL_STRING)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
			}
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
			hidespeakername
			giveitem(ITEM_PEARL_STRING)
		case BLUE_ULTRA_ORBS:
			bufferitemnameplural(STR_VAR_1, ITEM_ULTRA_ORB, 5)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY, MSGBOX_YESNO)
			if (var(VAR_RESULT) != YES) {
				return
			}
			checkitemspace(ITEM_ULTRA_ORB, 5)
			if (var(VAR_RESULT) != TRUE) {
				goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
			}
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
			hidespeakername
			giveitem(ITEM_ULTRA_ORB, 5)
	}
	removeitem(ITEM_BLUE_UFO)
	bufferitemname(STR_VAR_1, ITEM_BLUE_UFO)
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
	msgbox(Route116_TunnelersRestHouse_Text_TakeUfo)
	return
}

script Route116_TunnelersRestHouse_UFOTrader_PrepareMultichoiceBlue {
    dynmultipush(Route116_TunnelersRestHouse_Text_TeachMoves, BLUE_TUTOR)
    dynmultipush(Route116_TunnelersRestHouse_Text_AbilityPatch, BLUE_ABILITY_PATCH)
    dynmultipush(Route116_TunnelersRestHouse_Text_PerfectAllIVs, BLUE_ALL_IV_PERFECT)
    dynmultipush(Route116_TunnelersRestHouse_Text_PearlString, BLUE_PEARL_STRING)
    dynmultipush(Route116_TunnelersRestHouse_Text_UltraOrbs, BLUE_ULTRA_ORBS)
    dynmultipush(Route116_TunnelersRestHouse_Text_Nevermind, BLUE_CANCEL)
    dynmultistack(0, 0, FALSE, 5, FALSE, BLUE_TUTOR, NULL)
    return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderTutor {
	message(Route116_TunnelersRestHouse_Text_UFOTraderShouldTeach)
	waitmessage
    dynmultipush(Route116_TunnelersRestHouse_Text_AnyLevelUp, TUTOR_ALL_LEVEL)
    dynmultipush(Route116_TunnelersRestHouse_Text_EggMoves, TUTOR_EGG_MOVE)
    dynmultipush(Route116_TunnelersRestHouse_Text_Nevermind, TUTOR_CANCEL)
    dynmultistack(0, 0, FALSE, 5, FALSE, TUTOR_ALL_LEVEL, NULL)
    if (var(VAR_RESULT) > TUTOR_EGG_MOVE) {
        return
    }
	switch (var(VAR_RESULT)) {
		case TUTOR_ALL_LEVEL:
			setvar(VAR_MOVE_MANAGER, MOVE_REMINDER_LEARN_ALL_MOVES)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderTeachAnyMove, MSGBOX_YESNO)
		case TUTOR_EGG_MOVE:
			setvar(VAR_MOVE_MANAGER, MOVE_TUTOR_EGG_MOVES)
			msgbox(Route116_TunnelersRestHouse_Text_UFOTraderTeachEggMove, MSGBOX_YESNO)
    }
	if (var(VAR_RESULT) != YES) {
		return
	}
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderSeePuppet)
	special(ChooseMonForMoveRelearner)
	waitstate
	if (var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) {
		return
	}
	special(IsSelectedMonEgg)
	if (var(VAR_RESULT) == TRUE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderShowEgg)
	}
	if (var(VAR_0x8005) == 0) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderCantTeachPuppet)
	}
	special(TeachMoveRelearnerMove)
	waitstate
	if (var(VAR_0x8004) == 0) {
		return
	}
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderTaughtMove)
	removeitem(ITEM_BLUE_UFO)
	bufferitemname(STR_VAR_1, ITEM_BLUE_UFO)
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
	msgbox(Route116_TunnelersRestHouse_Text_TakeUfo)
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderCantTeachPuppet {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderCantTeach)
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderShowEgg {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderShowEgg)
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeUFO {
	if (checkitem(ITEM_RED_UFO) == FALSE && checkitem(ITEM_BLUE_UFO) == FALSE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeGreenUFO)
	}
	if (checkitem(ITEM_GREEN_UFO, 2) == FALSE && checkitem(ITEM_BLUE_UFO) == FALSE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeRedUFO)
	}
	if (checkitem(ITEM_GREEN_UFO, 2) == FALSE && checkitem(ITEM_RED_UFO) == FALSE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeBlueUFO)
	}
	message(Route116_TunnelersRestHouse_Text_UFOTraderExchangeLook)
	waitmessage
	if (checkitem(ITEM_GREEN_UFO, 2) == TRUE) {
    	dynmultipush(Route116_TunnelersRestHouse_Text_GreenUFO, MULTI_GREEN_UFO)
	}
	if (checkitem(ITEM_RED_UFO) == TRUE) {
    	dynmultipush(Route116_TunnelersRestHouse_Text_RedUFO, MULTI_RED_UFO)
	}
	if (checkitem(ITEM_BLUE_UFO) == TRUE) {
    	dynmultipush(Route116_TunnelersRestHouse_Text_BlueUFO, MULTI_BLUE_UFO)
	}
    dynmultipush(Route116_TunnelersRestHouse_Text_Nevermind, MULTI_UFO_CANCEL)
    dynmultistack(0, 0, FALSE, 5, FALSE, MULTI_GREEN_UFO, NULL)
	if (var(VAR_RESULT) > MULTI_BLUE_UFO) {
		return
	}
	switch (var(VAR_RESULT)) {
		case MULTI_GREEN_UFO:
			goto(Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeGreenUFO)
		case MULTI_RED_UFO:
			goto(Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeRedUFO)
		case MULTI_BLUE_UFO:
			goto(Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeBlueUFO)
	}
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeGreenUFO {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderRedUFOFor2GreenUFOs, MSGBOX_YESNO)
	if (var(VAR_RESULT) != YES) {
		return
	}
	checkitemspace(ITEM_RED_UFO)
	if (var(VAR_RESULT) != TRUE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
	}
	bufferitemname(STR_VAR_1, ITEM_RED_UFO)
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
	hidespeakername
	giveitem(ITEM_RED_UFO)
	removeitem(ITEM_GREEN_UFO, 2)
	bufferitemnameplural(STR_VAR_1, ITEM_GREEN_UFO, 2)
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
	msgbox(Route116_TunnelersRestHouse_Text_TakeUfo)
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeRedUFO {
	return
}

script Route116_TunnelersRestHouse_EventScript_UFOTraderExchangeBlueUFO {
	msgbox(Route116_TunnelersRestHouse_Text_UFOTrader2RedUFOsForBlueUFO, MSGBOX_YESNO)
	if (var(VAR_RESULT) != YES) {
		return
	}
	checkitemspace(ITEM_RED_UFO, 2)
	if (var(VAR_RESULT) != TRUE) {
		goto(Route116_TunnelersRestHouse_EventScript_UFOTraderNotEnoughSpace)
	}
	bufferitemnameplural(STR_VAR_1, ITEM_RED_UFO, 2)
	msgbox(Route116_TunnelersRestHouse_Text_UFOTraderGiveItem)
	hidespeakername
	giveitem(ITEM_RED_UFO, 2)
	removeitem(ITEM_BLUE_UFO)
	bufferitemname(STR_VAR_1, ITEM_BLUE_UFO)
	setspeakername(Route116_TunnelersRestHouse_Text_UFOTrader)
	msgbox(Route116_TunnelersRestHouse_Text_TakeUfo)
	return
}

text Route116_TunnelersRestHouse_Text_Gigi {
	"Gigi"
}

text Route116_TunnelersRestHouse_Text_Baelz {
	"Baelz"
}

text Route116_TunnelersRestHouse_Text_Ina {
	"Ina"
}

text Route116_TunnelersRestHouse_Text_Cook {
	"Cook"
}

text Route116_TunnelersRestHouse_Text_Player {
	"{PLAYER}"
}

text Route116_TunnelersRestHouse_Text_BuyItems {
	"Buy Items"
}

text Route116_TunnelersRestHouse_Text_TeachMoves {
	"Teach Moves"
}

text Route116_TunnelersRestHouse_Text_SellItems {
	"Sell Items"
}

text Route116_TunnelersRestHouse_Text_Nevermind {
	"Nevermind"
}

text Route116_TunnelersRestHouse_Text_GreenUFO {
	"Green UFO"
}

text Route116_TunnelersRestHouse_Text_RedUFO {
	"Red UFO"
}

text Route116_TunnelersRestHouse_Text_BlueUFO {
	"Blue UFO"
}

text Route116_TunnelersRestHouse_Text_ExchangeUFOs {
	"Exchange UFOs"
}

text Route116_TunnelersRestHouse_Text_UFOTrader {
	"UFO Trader"
}

text Route116_TunnelersRestHouse_Text_Worsen1IV {
	"Worsen 1 IV"
}

text Route116_TunnelersRestHouse_Text_Pearl {
	"Pearl"
}

text Route116_TunnelersRestHouse_Text_TohoOrbs {
	"5 Toho Orbs"
}

text Route116_TunnelersRestHouse_Text_EvoHeart {
	"Evo Heart"
}

text Route116_TunnelersRestHouse_Text_AbilityCapsule {
	"Ability Capsule"
}

text Route116_TunnelersRestHouse_Text_NatureMint {
	"Nature Mint"
}

text Route116_TunnelersRestHouse_Text_Perfect1IV {
	"Perfect 1 IV"
}

text Route116_TunnelersRestHouse_Text_BigPearl {
	"Big Pearl"
}

text Route116_TunnelersRestHouse_Text_GreatOrbs {
	"5 Great Orbs"
}

text Route116_TunnelersRestHouse_Text_AbilityPatch {
	"Ability Patch"
}

text Route116_TunnelersRestHouse_Text_PerfectAllIVs {
	"Perfect All IVs"
}

text Route116_TunnelersRestHouse_Text_PearlString {
	"Pearl String"
}

text Route116_TunnelersRestHouse_Text_UltraOrbs {
	"5 Ultra Orbs"
}

text Route116_TunnelersRestHouse_Text_AnyLevelUp {
	"Any Level-Up"
}

text Route116_TunnelersRestHouse_Text_EggMoves {
	"Egg Moves"
}

text Route116_TunnelersRestHouse_Text_UFOTraderIntro {
	format("Hey, the name's UFO Trader here!\pI just love collecting UFOs, but I can never seem to get enough of them.\pI'll do anything reasonable for me to get those UFOs.\p"
	"Whether you want items or for me to use one of my skills, I'll do it for those UFOs!")
}

text Route116_TunnelersRestHouse_Text_UFOTraderNoUFOs {
	format("Hmm, I don't sense any UFOs with you right now.\pDo let me know when you get some though, I'll do some skills to get some.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderHaveUFOs {
	format("You seem to have some UFOs with you right now.\pYou mind letting me have a look at them?")
}

text Route116_TunnelersRestHouse_Text_UFOTraderGreenUFO {
	format("That's a nice-looking Green UFO there.\pI can give you these for the Green UFO.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderRedUFO {
	format("That is a very good-looking Red UFO in your hands.\pI can give you these for the Red UFO.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderBlueUFO {
	format("Oh my, that is a beautiful Blue UFO that you have, I must have it myself.\pI can give you these for the Blue UFO.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderOutro {
	format("Well, if you have any UFOs, know I am the guy who will take them for whatever you want.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderNotEnoughSpace {
	format("Hmm, you don't seem to have enough space for the exchange of the UFO there.\pSorry, I wanna be fair to you at least.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderSoYouWantXForY {
	format("So you want the {STR_VAR_1}\Nfor a {STR_VAR_2}?")
}

text Route116_TunnelersRestHouse_Text_UFOTraderGiveItem {
	format("Alright, here's your\N{STR_VAR_1}.")
}

text Route116_TunnelersRestHouse_Text_TakeUfo {
	format("I'll take the {STR_VAR_1} then, thank you very much.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderShouldTeach {
	format("What type of moves should I teach then?")
}

text Route116_TunnelersRestHouse_Text_UFOTraderWhichStatShouldModify {
	format("Alright, which stat should I modify?")
}

text Route116_TunnelersRestHouse_Text_UFOTraderHPWorse {
	format("Hmm, I'll worsen the HP IV of this Puppet for a Green UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderAttackWorse {
	format("Hmm, I'll worsen the Attack IV of this Puppet for a Green UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderDefenseWorse {
	format("Hmm, I'll worsen the Defense IV of this Puppet for a Green UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderSpeedWorse {
	format("Hmm, I'll worsen the Speed IV of this Puppet for a Green UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderSpAttackWorse {
	format("Hmm, I'll worsen the Sp. Atk IV of this Puppet for a Green UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderSpDefenseWorse {
	format("Hmm, I'll worsen the Sp. Def IV of this Puppet for a Green UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderHPPerfect {
	format("Hmm, I'll perfect the HP IV of this Puppet for a Red UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderAttackPerfect {
	format("Hmm, I'll perfect the Attack IV of this Puppet for a Red UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderDefensePerfect {
	format("Hmm, I'll perfect the Defense IV of this Puppet for a Red UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderSpeedPerfect {
	format("Hmm, I'll perfect the Speed IV of this Puppet for a Red UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderSpAttackPerfect {
	format("Hmm, I'll perfect the Sp. Atk IV of this Puppet for a Red UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderSpDefensePerfect {
	format("Hmm, I'll perfect the Sp. Def IV of this Puppet for a Green UFO then.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderWorsenSpecificStat {
	format("Alright, let me just try and worsen this IV here.\pAnd there, your Puppet now has the lowest potential for that stat there.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderPerfectSpecificStat {
	format("Alright, let me just try and perfect this IV here.\pAnd there, your Puppet now has perfected their potential!")
}

text Route116_TunnelersRestHouse_Text_UFOTraderAlreadyIdealStat {
	format("Hmm, this Puppet already has the ideal stat you want.\pHey, at least you don't have to waste one of your UFOs there.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderTeachAnyMove {
	format("So you want me to teach a Puppet any move it naturally learns?")
}

text Route116_TunnelersRestHouse_Text_UFOTraderTeachEggMove {
	format("So you want me to teach a Puppet an egg move?")
}

text Route116_TunnelersRestHouse_Text_UFOTraderSeePuppet {
	format("Alright, let me see the Puppet in question.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderTryTeachMove {
	format("So which move should I teach the Puppet then?")
}

text Route116_TunnelersRestHouse_Text_UFOTraderTaughtMove {
	format("And there, the move is now taught to your Puppet!")
}

text Route116_TunnelersRestHouse_Text_UFOTraderShowEgg {
	format("That's an egg. It hasn't even hatched for me to be able to teach any moves at all!")
}

text Route116_TunnelersRestHouse_Text_UFOTraderCantTeach {
	format("Hmm, this Puppet doesn't have any moves I can teach of this specific kind.\pSorry, I wanna be fair with getting your UFOs at least.")
}

text Route116_TunnelersRestHouse_Text_UFOTraderExchangeLook {
	format("Hmm, which type of UFO are you going to exchange exactly?")
}

text Route116_TunnelersRestHouse_Text_UFOTraderRedUFOFor2GreenUFOs {
	format("I can give you a single Red UFO for 2 Green UFOs then.")
}

text Route116_TunnelersRestHouse_Text_UFOTrader2RedUFOsForBlueUFO {
	format("I can give you 2 Red UFOs for a single Blue UFO then.")
}

text Route116_TunnelersRestHouse_Text_GigiMurinIntro {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}GI MURIN!\pThe name's Gigi Murin for you trainer.\pThis red one with me is my friend here.")
}

text Route116_TunnelersRestHouse_Text_HakosBaelzIntro {
	format("{DESTROY_MUGSHOT}Wazzup!\pI am chaos, the end of ends.\pA steel rose trapped in an ice cage.\pYour best friend, Baelz Hakos.\pWITNESS ME!!\p"
	"Why do I not have the fancy mugshot like you by the way, Gigi?")
}

text Route116_TunnelersRestHouse_Text_GigiOutOfBudget {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}We didn't have the budget to afford a mugshot for you.\p"
	"We could only afford mines, Ame's, and even the player's mugshot.")
}

text Route116_TunnelersRestHouse_Text_RenkoFrickinTalking {
	format("{DESTROY_MUGSHOT}{CREATE_MUGSHOT MUGSHOT_RENKO EMOTE_NORMAL}I guess I'm here.")
}

text Route116_TunnelersRestHouse_Text_MaribelFrickinTalking {
	format("{DESTROY_MUGSHOT}{CREATE_MUGSHOT MUGSHOT_MARIBEL EMOTE_NORMAL}Yeah, I'm here.")
}

text Route116_TunnelersRestHouse_Text_BaelzInvested {
	format("{CREATE_MUGSHOT MUGSHOT_BAELZ EMOTE_NORMAL}Wazzup!\p"
	"I invested in Kronii coin, and now I was finally able to buy myself my own mugshot proper for you to see.\p"
	"How cool is that for you, {PLAYER}?")
}

text Route116_TunnelersRestHouse_Text_GigiBoughtIn {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}Yo, you bought into the coin as well, Bae?\p"
	"Good for you, bet you can even get {PLAYER} here to buy into it as well.\p"
	"Just hope you didn't see Calli's video regarding the coin.")
}

text Route116_TunnelersRestHouse_Text_BaelzWhat {
	format("Calli's video?\pYou mean she tried to expose it or something?")
}

text Route116_TunnelersRestHouse_Text_GigiDefense {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}Yeah, although I came in to her defense to keep the coin safe.\p"
	"I think I did a pretty good job making my case, especially against her.\p"
	"Gotta keep my coin's worth, you know?")
}

text Route116_TunnelersRestHouse_Text_BaelzHuh {
	format("Huh.\p"
	"{CREATE_MUGSHOT MUGSHOT_BAELZ EMOTE_NORMAL}Well, {PLAYER}, do you want some nice Kronii Coin?")
}

text Route116_TunnelersRestHouse_Text_InaWah {
	format("Wah!\NHello there, {PLAYER}.\p"
	"My name is Ina and I'm just visiting my friends here, Gigi and Bae.")
}

text Route116_TunnelersRestHouse_Text_BaelzNoMugshots {
	format("{CREATE_MUGSHOT MUGSHOT_BAELZ EMOTE_NORMAL}Yo Ina, look at this nice mugshot I got here!\p"
	"Looks pretty nice, doesn't it?")
}

text Route116_TunnelersRestHouse_Text_InaAdmit {
	format("Huh.\p"
	"I'll admit, it looks pretty nice, especially for you, Bae.\p"
	"Too bad I don't have one though.\p"
	"I don't have enough in me to make one right now.")
}

text Route116_TunnelersRestHouse_Text_BaelzCheerUp {
	format("{CREATE_MUGSHOT MUGSHOT_BAELZ EMOTE_NORMAL}Hey, cheer up, Ina.\p"
	"You'll get one eventually as well, I'm sure of it.")
}

text Route116_TunnelersRestHouse_Text_GigiCookie {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}Oh yeah, Ina, I have some cookies for you, by the way.\p"
	"Maybe this will cheer you up as well.")
}

text Route116_TunnelersRestHouse_Text_InaThankYou {
	format("Thank you both.\p"
	"I appreciate it, you guys looking after me as well.\p"
	"What kind of cookie is it exactly anyways, Gigi?")
}

text Route116_TunnelersRestHouse_Text_GigiLavaridge {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}I found these near Lavaridge, where someone called Mokou was giving them away.\p"
	"Dunno why exactly, but I was nearby and she was giving them away, so I took a decent amount and I still have some left over.")
}

text Route116_TunnelersRestHouse_Text_GigiMurinBogosBinted {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}Boat goes Binted?")
}

text Route116_TunnelersRestHouse_Text_GigiMurinLaugh {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}HAHAHAHAHAHA!!")
}

text Route116_TunnelersRestHouse_Text_NueBogosBinted {
	format("Nuuu-e?")
}

text Route116_TunnelersRestHouse_Text_CookTalk {
	format("I have no idea why these people have brought me here specifically.\pI will say though, I do have some nice stuff for sale if you want.")
}

text Route116_TunnelersRestHouse_Text_CookTalkAgain {
	format("There are more stuff I have if you want.")
}

text Route116_TunnelersRestHouse_Text_CookItemShop {
	format("Take a look at my delicacies if you want to buy some.")
}

text Route116_TunnelersRestHouse_Text_CookMoveTutor {
	format("My lessons come at a fee, just so you're aware.")
}

text Route116_TunnelersRestHouse_Text_CookSellItems {
	format("Alright, let me see what you have available.")
}

text Route116_TunnelersRestHouse_Text_CookLearnedMove {
	format("Your Puppet has learned the move I taught successfully.\nI will be taking my fee for this service here now.")
}

movement Route116_TunnelersRestHouse_Movement_PlayerMoveRightToFront {
	walk_down
	walk_right
	face_up
}

movement Route116_TunnelersRestHouse_Movement_PlayerMoveLeftToFront {
	walk_down
	walk_left
	face_up
}

movement Route116_TunnelersRestHouse_Movement_PlayerMoveTheWayToFront {
	walk_left
	walk_down
	walk_right
	face_up
}

raw `
Route116_TunnelersRestHouse_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, Route116_TunnelersRestHouse_OnTransition
	.byte 0

Route116_TunnelersRestHouse_OnTransition:
	setflag FLAG_LANDMARK_TUNNELERS_REST_HOUSE
	end

Route116_TunnelersRestHouse_EventScript_Tunneler1::
	msgbox Route116_TunnelersRestHouse_Text_WeHadToStopBoring, MSGBOX_NPC
	end

Route116_TunnelersRestHouse_EventScript_Tunneler2::
	msgbox Route116_TunnelersRestHouse_Text_ManDiggingHisWayToVerdanturf, MSGBOX_NPC
	end

Route116_TunnelersRestHouse_EventScript_Tunneler3::
	lock
	faceplayer
	goto_if_set FLAG_RUSTURF_TUNNEL_OPENED, Route116_TunnelersRestHouse_EventScript_TunnelOpened
	msgbox Route116_TunnelersRestHouse_Text_GetToVerdanturfWithoutTunnel, MSGBOX_DEFAULT
	release
	end

Route116_TunnelersRestHouse_EventScript_TunnelOpened::
	msgbox Route116_TunnelersRestHouse_Text_TunnelHasGoneThrough, MSGBOX_DEFAULT
	release
	end

Route116_TunnelersRestHouse_Text_WeHadToStopBoring:
	.string "That Noiseturf Tunnel there…\p"
	.string "At first, we had a huge work crew boring\n"
	.string "through rock with the latest machinery.\l"
	.string "But, we had to stop.\p"
	.string "It turns out that we would have had\n"
	.string "a negative effect on wild POKéMON in\l"
	.string "the area.\p"
	.string "So, we've got nothing to do but loll\n"
	.string "around here doing nothing.$"

Route116_TunnelersRestHouse_Text_ManDiggingHisWayToVerdanturf:
	.string "There's a man digging his way to\n"
	.string "VERDANTURF all by his lonesome.\l"
	.string "He's desperate to get through.\p"
	.string "He says that if he digs little by little\n"
	.string "without using machines, he won't\l"
	.string "disturb POKéMON, and he'll avoid\l"
	.string "harming the natural environment.\p"
	.string "I wonder if he made it through yet.$"

Route116_TunnelersRestHouse_Text_GetToVerdanturfWithoutTunnel:
	.string "To get to VERDANTURF without using\n"
	.string "this TUNNEL, you'd have to cross the\l"
	.string "sea to DEWFORD, sail on to SLATEPORT,\l"
	.string "then travel through MAUVILLE.$"

Route116_TunnelersRestHouse_Text_TunnelHasGoneThrough:
	.string "Did you hear? The TUNNEL to VERDANTURF\n"
	.string "has gone through!\p"
	.string "Sometimes, if you hope strongly enough,\n"
	.string "dreams do come true.$"

`

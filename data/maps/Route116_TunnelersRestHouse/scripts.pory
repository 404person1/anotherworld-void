
const LOCALID_GIGI = 1
const LOCALID_COOK = 2
const LOCALID_BAELZ = 3

const MULTI_BUY_ITEMS = 0
const MULTI_BP_MOVES = 1
const MULTI_SELL_ITEMS = 2
const MULTI_NEVERMIND = 3

script Route116_TunnelersRestHouse_EventScript_GigiFunEvent {
	lock
	call(Route116_TunnelersRestHouse_EventScript_MovePlayerInFront)
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Gigi)
	msgbox(Route116_TunnelersRestHouse_Text_GigiMurinIntro, MSGBOX_DEFAULT)
	closemessage
	applymovement(LOCALID_BAELZ, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Baelz)
	msgbox(Route116_TunnelersRestHouse_Text_HakosBaelzIntro, MSGBOX_DEFAULT)
	closemessage
	applymovement(LOCALID_GIGI, Common_Movement_WalkInPlaceDown)
	waitmovement(0)
	setspeakername(Route116_TunnelersRestHouse_Text_Gigi)
	msgbox(Route116_TunnelersRestHouse_Text_GigiOutOfBudget, MSGBOX_DEFAULT)
	closemessage
	setspeakername(Route116_TunnelersRestHouse_Text_Player)
	msgbox(Route116_TunnelersRestHouse_Text_RenkoFrickinTalking, MSGBOX_DEFAULT)
	closemessage
	release
	end
}

script Route116_TunnelersRestHouse_EventScript_MovePlayerInFront {
	specialvar(VAR_RESULT, GetPlayerFacingDirection)
	switch(var(VAR_RESULT)){
		case DIR_WEST:
			applymovement(OBJ_EVENT_ID_PLAYER, Route116_TunnelersRestHouse_Movement_PlayerMoveLeftToFront)
			waitmovement(0)
		case DIR_EAST:
			applymovement(OBJ_EVENT_ID_PLAYER, Route116_TunnelersRestHouse_Movement_PlayerMoveRightToFront)
			waitmovement(0)
		case DIR_SOUTH:
			applymovement(OBJ_EVENT_ID_PLAYER, Route116_TunnelersRestHouse_Movement_PlayerMoveTheWayToFront)
			waitmovement(0)
	}
	return
}

script Route116_TunnelersRestHouse_EventScript_Cook {
	lock
	faceplayer
	setspeakername(Route116_TunnelersRestHouse_Text_Cook)
    message(Route116_TunnelersRestHouse_Text_CookTalk)
    waitmessage
    while {
        call(Route116_TunnelersRestHouse_Cook_PrepareMultichoice)
        if (var(VAR_RESULT) > MULTI_SELL_ITEMS) {
            break
        }
        switch (var(VAR_RESULT)) {
            case MULTI_BUY_ITEMS:
                call(Route116_TunnelersRestHouse_Cook_ItemShop)
            case MULTI_BP_MOVES:
                call(Route116_TunnelersRestHouse_Cook_MoveShop)
            case MULTI_SELL_ITEMS:
                call(Route116_TunnelersRestHouse_Cook_SellItems)
        }
        message(Route116_TunnelersRestHouse_Text_CookTalkAgain)
        waitmessage
    }
	release
	end
}

script Route116_TunnelersRestHouse_Cook_PrepareMultichoice {
    dynmultipush(Route116_TunnelersRestHouse_Text_BuyItems, MULTI_BUY_ITEMS)
    dynmultipush(Route116_TunnelersRestHouse_Text_TeachMoves, MULTI_BP_MOVES)
    dynmultipush(Route116_TunnelersRestHouse_Text_SellItems, MULTI_SELL_ITEMS)
    dynmultipush(Route116_TunnelersRestHouse_Text_Nevermind, MULTI_NEVERMIND)
    dynmultistack(0, 0, FALSE, 5, FALSE, MULTI_BUY_ITEMS, NULL)
    return
}

script Route116_TunnelersRestHouse_Cook_ItemShop {
    msgbox(Route116_TunnelersRestHouse_Text_CookItemShop)
    buyonlymart(Route116_TunnelersRestHouse_Cook_ItemMart)
    return
}

script Route116_TunnelersRestHouse_Cook_MoveShop {
    msgbox(Route116_TunnelersRestHouse_Text_CookMoveTutor)
	setvar(VAR_RESULT, 0)
    movetutormart(Route116_TunnelersRestHouse_Cook_MoveTutor)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(Route116_TunnelersRestHouse_Text_CookLearnedMove)
	}
    return
}

script Route116_TunnelersRestHouse_Cook_SellItems {
    msgbox(Route116_TunnelersRestHouse_Text_CookSellItems)
    itemseller
    return
}

mart Route116_TunnelersRestHouse_Cook_ItemMart {
	ITEM_BENTO_BOX
	ITEM_UNAGI_LUNCH
	ITEM_HEAVEN_PEACH
}

mart Route116_TunnelersRestHouse_Cook_MoveTutor {
    MOVE_CUT
	MOVE_STRENGTH
}

text Route116_TunnelersRestHouse_Text_Gigi {
	"Gigi"
}

text Route116_TunnelersRestHouse_Text_Baelz {
	"Baelz"
}

text Route116_TunnelersRestHouse_Text_Cook {
	"Cook"
}

text Route116_TunnelersRestHouse_Text_Player {
	"{PLAYER}"
}

text Route116_TunnelersRestHouse_Text_BuyItems {
	"Buy Items"
}

text Route116_TunnelersRestHouse_Text_TeachMoves {
	"Teach Moves"
}

text Route116_TunnelersRestHouse_Text_SellItems {
	"Sell Items"
}

text Route116_TunnelersRestHouse_Text_Nevermind {
	"Nevermind"
}

text Route116_TunnelersRestHouse_Text_GigiMurinIntro {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}GI MURIN!\pThe name's Gigi Murin for you trainer.\pThis red one with me is my friend here.")
}

text Route116_TunnelersRestHouse_Text_HakosBaelzIntro {
	format("{DESTROY_MUGSHOT}Wazzup!\pI am chaos, the end of ends.\pA steel rose trapped in an ice cage.\pYour best friend, Baelz Hakos.\pWITNESS ME!!\p"
	"Why do I not have the fancy mugshot like you by the way, Gigi?")
}

text Route116_TunnelersRestHouse_Text_GigiOutOfBudget {
	format("{CREATE_MUGSHOT MUGSHOT_GIGI EMOTE_NORMAL}We didn't have the budget to afford a mugshot for you.\p"
	"We could only afford mines, Ame's, and even the player's mugshot.")
}

text Route116_TunnelersRestHouse_Text_RenkoFrickinTalking {
	format("{DESTROY_MUGSHOT}{CREATE_MUGSHOT MUGSHOT_RENKO EMOTE_NORMAL}I guess I'm here.")
}

text Route116_TunnelersRestHouse_Text_MaribelFrickinTalking {
	format("{DESTROY_MUGSHOT}{CREATE_MUGSHOT MUGSHOT_MARIBEL EMOTE_NORMAL}Yeah, I'm here.")
}

text Route116_TunnelersRestHouse_Text_CookTalk {
	format("I have no idea why these people have brought me here specifically.\pI will say though, I do have some nice stuff for sale if you want.")
}

text Route116_TunnelersRestHouse_Text_CookTalkAgain {
	format("There are more stuff I have if you want.")
}

text Route116_TunnelersRestHouse_Text_CookItemShop {
	format("Take a look at my delicacies if you want to buy some.")
}

text Route116_TunnelersRestHouse_Text_CookMoveTutor {
	format("My lessons come at a fee, just so you're aware.")
}

text Route116_TunnelersRestHouse_Text_CookSellItems {
	format("Alright, let me see what you have available.")
}

text Route116_TunnelersRestHouse_Text_CookLearnedMove {
	format("Your Puppet has learned the move I taught successfully.\nI will be taking my fee for this service here now.")
}

movement Route116_TunnelersRestHouse_Movement_PlayerMoveRightToFront {
	walk_down
	walk_right
	face_up
}

movement Route116_TunnelersRestHouse_Movement_PlayerMoveLeftToFront {
	walk_down
	walk_left
	face_up
}

movement Route116_TunnelersRestHouse_Movement_PlayerMoveTheWayToFront {
	walk_left
	walk_down
	walk_right
	face_up
}

raw `
Route116_TunnelersRestHouse_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, Route116_TunnelersRestHouse_OnTransition
	.byte 0

Route116_TunnelersRestHouse_OnTransition:
	setflag FLAG_LANDMARK_TUNNELERS_REST_HOUSE
	end

Route116_TunnelersRestHouse_EventScript_Tunneler1::
	msgbox Route116_TunnelersRestHouse_Text_WeHadToStopBoring, MSGBOX_NPC
	end

Route116_TunnelersRestHouse_EventScript_Tunneler2::
	msgbox Route116_TunnelersRestHouse_Text_ManDiggingHisWayToVerdanturf, MSGBOX_NPC
	end

Route116_TunnelersRestHouse_EventScript_Tunneler3::
	lock
	faceplayer
	goto_if_set FLAG_RUSTURF_TUNNEL_OPENED, Route116_TunnelersRestHouse_EventScript_TunnelOpened
	msgbox Route116_TunnelersRestHouse_Text_GetToVerdanturfWithoutTunnel, MSGBOX_DEFAULT
	release
	end

Route116_TunnelersRestHouse_EventScript_TunnelOpened::
	msgbox Route116_TunnelersRestHouse_Text_TunnelHasGoneThrough, MSGBOX_DEFAULT
	release
	end

Route116_TunnelersRestHouse_Text_WeHadToStopBoring:
	.string "That RUSTURF TUNNEL there…\p"
	.string "At first, we had a huge work crew boring\n"
	.string "through rock with the latest machinery.\l"
	.string "But, we had to stop.\p"
	.string "It turns out that we would have had\n"
	.string "a negative effect on wild POKéMON in\l"
	.string "the area.\p"
	.string "So, we've got nothing to do but loll\n"
	.string "around here doing nothing.$"

Route116_TunnelersRestHouse_Text_ManDiggingHisWayToVerdanturf:
	.string "There's a man digging his way to\n"
	.string "VERDANTURF all by his lonesome.\l"
	.string "He's desperate to get through.\p"
	.string "He says that if he digs little by little\n"
	.string "without using machines, he won't\l"
	.string "disturb POKéMON, and he'll avoid\l"
	.string "harming the natural environment.\p"
	.string "I wonder if he made it through yet.$"

Route116_TunnelersRestHouse_Text_GetToVerdanturfWithoutTunnel:
	.string "To get to VERDANTURF without using\n"
	.string "this TUNNEL, you'd have to cross the\l"
	.string "sea to DEWFORD, sail on to SLATEPORT,\l"
	.string "then travel through MAUVILLE.$"

Route116_TunnelersRestHouse_Text_TunnelHasGoneThrough:
	.string "Did you hear? The TUNNEL to VERDANTURF\n"
	.string "has gone through!\p"
	.string "Sometimes, if you hope strongly enough,\n"
	.string "dreams do come true.$"

`
